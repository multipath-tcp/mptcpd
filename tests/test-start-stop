#! /bin/sh
# SPDX-License-Identifier: BSD-3-Clause

# Minimal mptcpd start/stop test.
#
# Copyright (c) 2018, 2019, 2021, Intel Corporation

# Non-interactive sudo capable if exit code is 0.
echo Running non-interactive sudo check...
sudo -n echo "    succeeded"
sudo_exit_code=$?

set -e

variable=`sysctl net.mptcp | grep enabled | sed -e 's/\(net.mptcp.*enabled\).*$/\1/'`
old_value=`sysctl $variable | sed -e 's/.*= \(.*\)$/\1/'`

disable_value=0
enable_value=1

# "Disabled" value is always 0, but the "enabled" value could be 1 or
# 2, depending on the kernel in use.  For example, the
# multipath-tcp.org kernel "enabled" value could be 1 or 2.  Use the
# old "enabled" value in case it is 2 instead of 1.
if [ $old_value -ne 0 ]
then
    enable_value=$old_value
fi

# @todo It would be better to have some sort of indication that
#       mptcpd is fully up and running rather than timeout after a
#       fixed amount of time like this.
command="timeout --preserve-status \
                 --signal=TERM     \
                 --kill-after=5s   \
                 1s ../src/mptcpd --plugin-dir=$TEST_PLUGIN_DIR"


# Only run the individual enabled/disabled MPTCP test cases if the
# "enabled" value can be set non-interactively, i.e. sudo can be
# executed without a password.  This is mostly useful for automated
# builds.
if [ $sudo_exit_code -eq 0 ]
then
    for value in $disable_value $enable_value
    do
	echo "TEST CASE: $variable = $value"
	sudo -n sysctl -w $variable=$value
	$command
    done

    # Reset the "enabled" value to its original value.
    sudo -n sysctl -w $variable=$old_value
else
    # Non-root case.
    echo Running test without root privileges
    $command
fi
